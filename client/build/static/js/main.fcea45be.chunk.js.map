{"version":3,"sources":["assets/logo.svg","assets/icons/bell.svg","assets/icons/chat.svg","assets/icons/menu.svg","assets/icons/to_right.svg","assets/icons/search.svg","assets/icons/plus.svg","assets/icons/fullscreen.svg","assets/icons/user.svg","assets/icons/folder.svg","assets/icons/spanner.svg","assets/icons/close.svg","apps/components/navbar/navbar.js","library/math.js","library/dateTime.js","library/sanitize.js","assets/icons/expand2.svg","assets/icons/lock.svg","library/journal/makeEntry.js","library/server.js","library/journal/api.js","assets/icons/camera.svg","assets/icons/edit.svg","assets/icons/book.svg","assets/icons/newspaper.svg","assets/icons/expand.svg","apps/components/popApps/popApps.js","apps/main/main.js","index.js"],"names":["navbarMenuButton","title","onClickFunction","icon","expands","ifExpands","rightAIcon","navbarInboxMsg","dp","name","preview","status","timestamp","detailStyle","statusText","length","substring","navbarMenuHTML","menu","profileIcon","appsIcon","settingsIcon","logoutIcon","inbox","searchIcon","newMsgIcon","fulScrIcon","logo","notifications","selectedNavbarMenu","toggleNavbarMenu","menuType","document","getElementById","style","display","innerHTML","toUpperCase","RedirectHome","location","href","popAppID","popAppSelect","selected","targetBtn","targetBod","popApp","className","toggleInboxTray","toggleMenuTray","toggleNotiTray","popAppSelectJournal","popAppSelectFinance","popAppSelectDiscover","Navbar","id","onClick","src","alt","bell","chat","userSelect","prefixedNumeral","n","String","endsWith","_","Date","months","date","d","getDate","getMonth","getFullYear","shortDate","sanitize","str","replace","longJournalExpanderPress","pid","concat","el","ex","im","maxHeight","overflowY","height","marginTop","paddingTop","transform","makeEntry","user","head","body","img","isPublic","timeStamp","stamp","Type","prvIcon","Head","Body","match","ex2Icon","serverAdr","window","submitEntry","image","isPrivate","uid","token","encodeURIComponent","fetch","then","res","json","data","console","log","postMyEntry","makeMyEntries","feed","count","entry","innerText","entryImg","toolbarTrayOpen","toolbarButtons","journalViews","fetchMyEntries","addImagePreview","imgEl","cntEl","addEventListener","newImg","files","reader","FileReader","this","result","backgroundImage","border","opacity","readAsDataURL","toolbarButtonPress","pressed","btn","toolbarExpanderPress","tb","journalViewSelect","i","journalNewPressed","journalOldPressed","journalNwfPressed","newEntryHeadClick","classList","remove","newEntryBodyClick","newEntrySubmitPressed","entryHead","entryBody","privacyOp","post","value","checked","parseInt","entryImgUp","add","PopApps","expIcon","nwfIcon","newIcon","oldIcon","placeholder","marginBottom","color","userImg","required","maxLength","type","hidden","camera","width","textAlign","minWidth","margin","justifyContent","htmlFor","fontSize","Main","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.fcea45be.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.60435fa5.svg\";","export default __webpack_public_path__ + \"static/media/bell.f77ff2d3.svg\";","export default __webpack_public_path__ + \"static/media/chat.36bb39c0.svg\";","export default __webpack_public_path__ + \"static/media/menu.430a3461.svg\";","export default __webpack_public_path__ + \"static/media/to_right.1b6e5db2.svg\";","export default __webpack_public_path__ + \"static/media/search.ef4ff28a.svg\";","export default __webpack_public_path__ + \"static/media/plus.3695c148.svg\";","export default __webpack_public_path__ + \"static/media/fullscreen.9a63a6bc.svg\";","export default __webpack_public_path__ + \"static/media/user.10a93f10.svg\";","export default __webpack_public_path__ + \"static/media/folder.1572fa0c.svg\";","export default __webpack_public_path__ + \"static/media/spanner.36259bb2.svg\";","export default __webpack_public_path__ + \"static/media/close.056de53a.svg\";","import './navbar.css'\nimport logo from '../../../assets/logo.svg'\nimport bell from '../../../assets/icons/bell.svg'\nimport chat from '../../../assets/icons/chat.svg'\nimport menu from '../../../assets/icons/menu.svg'\nimport rightAIcon from '../../../assets/icons/to_right.svg'\nimport searchIcon from '../../../assets/icons/search.svg'\nimport newMsgIcon from '../../../assets/icons/plus.svg'\nimport fulScrIcon from '../../../assets/icons/fullscreen.svg'\nimport profileIcon from '../../../assets/icons/user.svg'\nimport appsIcon from '../../../assets/icons/folder.svg'\nimport settingsIcon from '../../../assets/icons/spanner.svg'\nimport logoutIcon from '../../../assets/icons/close.svg'\n\n\nconst navbarNotification = () => {\n    return `<div>hello!</div>`\n}\n\n\nconst navbarMenuButton = (title, onClickFunction, icon, expands) => {\n    let ifExpands = `<div style='min-width:10%;'></div>`\n\n    if (expands) {\n        ifExpands = `<img\n            src=${rightAIcon}\n            style='width:10%;height:28px;margin-top:8px;'\n        />`\n    }\n\n    return `\n    <div class=\"global-navbar-menu-button\" onClick=\"${onClickFunction}()\">\n        <img src=${icon} style='width:10%;' />\n        <h3 style='pointer-events:none;width:80%;margin-top:12px;'>${title}</h3>\n        ${ifExpands}\n    </div>\n    `\n}\n\n\nconst navbarInboxMsg = (dp, name, preview, status, timestamp) => {\n    let detailStyle = ''\n    let statusText = ''\n\n    if (status === 0) {\n        detailStyle = 'background-color:rgba(.2,.2,.2,.1);'\n        statusText = 'New'\n    }\n    if (status === 1) { statusText = 'Read' }\n    if (status === 2) { statusText = 'Sent' }\n    if (status === 3) { statusText = 'Seen' }\n\n    if (name.length > 26) {name = name.substring(0, 24) + '..'}\n\n    return `\n    <div class='global-navbar-inbox-msg'>\n        <img src='${dp}' style='width:15%;'/>\n        <div\n            class='global-navbar-inbox-msg-detail'\n            style='${detailStyle}'\n        >\n            <h4 style='margin:6px 3px 6px 3px;user-select:none;'> ${name} </h4>\n            <h6 style='margin:6px 6px 0 6px;user-select:none;'> ${preview} </h6>\n        </div>\n        <div style='display:block'>\n            <p class='global-navbar-inbox-msg-status'> ${statusText} </p>\n            <p class='global-navbar-inbox-msg-status'> ${timestamp} </p>\n        </div>\n    </div>\n    `\n}\n\n\nconst navbarMenuHTML = {\n\n    /* --------------------------------------------------------------------- */\n    menu:`\n        ${navbarMenuButton(\"Profile\", \"console.log\", profileIcon, false)}\n        ${navbarMenuButton(\"Apps\", \"console.log\", appsIcon, true)}\n        ${navbarMenuButton(\"Settings\", \"console.log\", settingsIcon, true)}\n        ${navbarMenuButton(\"Logout\", \"console.log\", logoutIcon, false)}\n        <div style='\n            margin:6px 0 6px 0;\n            text-align:center;\n            color:grey;\n        '>\n            <a class='global-navbar-menu-footer' href='/'> Privacy </a> ·\n            <a class='global-navbar-menu-footer' href='/'> Cookies </a> ·\n            <a class='global-navbar-menu-footer' href='/'> Terms </a> ·\n            <a class='global-navbar-menu-copyright'> Easter Company © 2021 </a>\n        </div>\n    `,\n\n    /* --------------------------------------------------------------------- */\n    inbox:`\n    <div style='\n        display:flex;\n        margin-bottom:8px;\n        justify-content:space-around;\n    '>\n        <div style='display:flex;margin-top:6px;'>\n            <img src=${searchIcon} style='\n                width:28px;\n                height:28px;\n                margin-top:8px;\n                margin-left:12px;\n            ' />\n            <input\n                class='global-navbar-inbox-search'\n                placeholder='Search contacts'\n                minlength='1'\n            />\n        </div>\n        <div style='display:flex;margin-top:6px;'>\n            <img src=${newMsgIcon} style='\n                width:28px;\n                height:28px;\n                margin: 8px 12px 0 8px;\n                cursor: pointer;\n            ' />\n            <img src=${fulScrIcon} style='\n                width:28px;\n                height:28px;\n                margin-top:8px;\n                margin-right:12px;\n                cursor: pointer;\n            ' />\n        </div>\n    </div>\n    <div class='global-navbar-inbox'>\n        ${navbarInboxMsg(logo, 'John Smith', 'This is an unread message!', 0, '1m')}\n        ${navbarInboxMsg(logo, 'Jane Doe', 'This is a read message.', 1, '2h')}\n        ${navbarInboxMsg(logo, 'Jon Snow', 'This is a sent message.', 2, '3d')}\n        ${navbarInboxMsg(logo, 'Julius Ceaser', 'This is a seen message.', 3, '1W')}\n        ${navbarInboxMsg(logo, 'Julius Salad', 'This is 1 month old.', 3, '2M')}\n        ${navbarInboxMsg(logo, 'Jon Targaryen', 'This is 1 year old.', 3, '1Y')}\n        ${navbarInboxMsg(logo, 'ThisIsA ReallyLongName', 'This is 1 month old.', 3, '1M')}\n        ${navbarInboxMsg(logo, 'ThisIsA ReallyReallyLongName', 'This is 1 month old.', 3, '1M')}\n        ${navbarInboxMsg(logo, 'ThisIsA ReallyReallyReallyReallyLongName', 'This is 1 month old.', 3, '1M')}\n    </div>\n    `,\n\n    /* --------------------------------------------------------------------- */\n    notifications: `\n        ${navbarNotification()}\n        ${navbarNotification()}\n        ${navbarNotification()}\n    `\n\n}\n\n\nlet selectedNavbarMenu = null\n\n\nconst toggleNavbarMenu = (menuType) => {\n    const menu = document.getElementById('global-navbar-menu')\n\n    if (menu.style.display === 'block' && selectedNavbarMenu === menuType) {\n        menu.style.display = 'none'\n    } else {\n        menu.style.display = 'block'\n    }\n\n    selectedNavbarMenu = menuType\n\n    if (menuType) {\n        menu.innerHTML = `\n            <div style='background-color:black;'>\n                <h6 style='\n                    color:white;\n                    text-align:left;\n                    margin: 0 0 0 6px;\n                '>\n                    ${selectedNavbarMenu.toUpperCase()}\n                </h6>\n            </div>\n            <div class='global-navbar-menu-content'>\n                ${navbarMenuHTML[selectedNavbarMenu]}\n            </div>\n        `\n    }\n}\n\n\nconst RedirectHome = () => {\n    document.location.href = '/'\n}\n\n\nconst popAppID = [\n    'journal',\n    'finance',\n    'discover'\n]\n\n\nconst popAppSelect = (selected) => {\n    let targetBtn = null\n    let targetBod = null\n\n    for(const popApp in popAppID){\n        targetBtn = 'global-navbar-popapp-' + popAppID[popApp]\n        targetBod = 'popApp-container-' + popAppID[popApp]\n\n        if (popAppID[popApp] === selected){\n            document.getElementById(\n                targetBod\n            ).className = 'popApp-container-selected'\n            document.getElementById(\n                targetBtn\n            ).className = 'global-navbar-popapp-selected'\n        } else {\n            document.getElementById(\n                targetBod\n            ).className = 'popApp-container'\n            document.getElementById(\n                targetBtn\n            ).className = 'global-navbar-popapp'\n        }\n\n    }\n\n}\n\n\n/*\n    THESE FUNCTIONS ARE DECLARED TO AVOID USE OF ARROW FUNCTIONS INSIDE JSX\n    ELEMENTS IN THE NAVBAR/TRAY -> WHICH WOULD CAUSE BAD MEMORY PERFORMANCE\n\n    [Arrow functions inside onClick arguments create a new function on each\n     use.]\n*/\nconst toggleInboxTray = () => {toggleNavbarMenu('inbox')}\nconst toggleMenuTray  = () => {toggleNavbarMenu('menu')}\nconst toggleNotiTray = () => {toggleNavbarMenu('notifications')}\n\n\nconst popAppSelectJournal = () => {popAppSelect('journal')}\nconst popAppSelectFinance = () => {popAppSelect('finance')}\nconst popAppSelectDiscover = () => {popAppSelect('discover')}\n\n\n/*\n    EXPORTED REACT ELEMENT (NAVBAR) CONTAINS ALL FUNCTIONALITY FROM THIS FILE\n    EMBEDDED DIRECTLY OR RECURSIVELY WITHIN\n*/\nconst Navbar = () => {\n    return <div id='document-header' className='document-header'>\n        <div className='global-navbar'>\n            <div className='global-navbar-left' onClick={RedirectHome}>\n                <img\n                    src={logo}\n                    className='global-navbar-logo'\n                    alt='Easter Company Logo'\n                />\n                <h1 className='global-site-header'> Easter Company </h1>\n            </div>\n            <div className='global-navbar-right'>\n                <img className='global-navbar-button'\n                    src={bell} alt='Notification Button'\n                    onClick={toggleNotiTray}\n                />\n                <img className='global-navbar-button'\n                    src={chat} alt='Messages Button'\n                    onClick={toggleInboxTray}\n                />\n                <img className='global-navbar-button'\n                    src={menu} alt='Menu Button'\n                    onClick={toggleMenuTray}\n                />\n            </div>\n            <div className='global-navbar-divider'></div>\n        </div>\n        <div className='global-navbar-menu-container'>\n            <div className='global-navbar-menu-spacer' />\n            <div className='global-navbar-menu' id='global-navbar-menu' />\n        </div>\n        <div className='global-navbar-pop'>\n            <div\n                id='global-navbar-popapp-journal'\n                className='global-navbar-popapp-selected'\n                onClick={popAppSelectJournal}\n            > <span style={{userSelect:'none'}}> Journal </span> </div>\n            <div\n                id='global-navbar-popapp-finance'\n                className='global-navbar-popapp'\n                onClick={popAppSelectFinance}\n            > <span style={{userSelect:'none'}}> Finance </span> </div>\n            <div\n                id='global-navbar-popapp-discover'\n                className='global-navbar-popapp'\n                onClick={popAppSelectDiscover}\n            > <span style={{userSelect:'none'}}> Discover </span> </div>\n        </div>\n    </div>\n}\n\n\nexport default Navbar\n","\n\nconst prefixedNumeral = (n) => {\n    n = String(n)\n    if (n.endsWith('11') || n.endsWith('12') || n.endsWith('13')) {\n        return n + 'th'\n    } else if (n.endsWith('1')) {\n        return n + 'st'\n    } else if (n.endsWith('2')) {\n        return n + 'nd'\n    } else if (n.endsWith('3')) {\n        return n + 'rd'\n    } else {\n        return n + 'th'\n    }\n}\n\n\nexport {\n    prefixedNumeral,\n}\n","import { prefixedNumeral } from './math.js'\n\nconst _ = new Date()\nconst months = [\n    'January', 'Febuary', 'March', 'April',\n    'May', 'June', 'July', 'August',\n    'September', 'October', 'November', 'December'\n]\n\n\nconst date = (d=_) => {\n    return d.getDate() + '/' + months[d.getMonth()] + '/' + d.getFullYear()\n}\n\n\nconst shortDate = (d=_) => {\n    return prefixedNumeral(d.getDate()) + ' ' + months[d.getMonth()]\n}\n\n\nconst time = (d=_) => {\n    return d.getHours() + ':' + d.getMinutes()\n}\n\n\nconst dateTime = () => {\n    return date() + ' ' + time()\n}\n\n\nexport default dateTime\nexport {\n    date,\n    time,\n    shortDate\n}\n","\nconst sanitize = (str) => {\n    let r = str\n        .replace(/</g, \"&lt;\")\n        .replace(/>/g, \"&gt;\")\n        .replace(/ +(?= )/g,'')\n        .replace(/(\\r\\n|\\r|\\n){3,}/g, '$1\\n')\n    return r\n}\n\nexport default sanitize\n","export default __webpack_public_path__ + \"static/media/expand2.9bcdcd13.svg\";","export default __webpack_public_path__ + \"static/media/lock.eee65054.svg\";","// LIBRARY IMPORTS\nimport sanitize from '../sanitize'\nimport { date } from '../dateTime'\n\n// ASSET IMPORTS\nimport ex2Icon from '../../assets/icons/expand2.svg'\nimport prvIcon from '../../assets/icons/lock.svg'\n\n\nexport const longJournalExpanderPress = (pid) => {\n    const id = 'pid_'.concat(pid);\n    const el = document.getElementById(id);\n    const ex = document.getElementById(id + '_expander');\n    const im = document.getElementById(id + '_expanderImg');\n    if(el.style.maxHeight !== 'unset') {\n        el.style.maxHeight = 'unset';\n        el.style.overflowY = 'visible';\n        ex.style.height  = '36px';\n        ex.style.marginTop = '-16px';\n        ex.style.paddingTop = 'unset';\n        im.style.transform = 'scaleY(-1)';\n    } else {\n        el.style.maxHeight = '';\n        el.style.overflowY = '';\n        ex.style.height  = '';\n        ex.style.marginTop = '';\n        ex.style.paddingTop = '';\n        im.style.transform = '';\n    }\n}\n\n\nexport const makeEntry = (pid, user, head, body, img=null, isPublic, timeStamp) => {\n    if (img) img = `<img src='${img}' class='journal-entry-img'>`\n    else img = ``\n\n    const stamp = new Date(timeStamp)\n    const Type = isPublic ? `` : `\n        <div class='journal-entry-type'>\n            <img src='${prvIcon}' alt='private' />\n        </div>`\n    const Head = sanitize(head)\n    const Body = sanitize(body)\n\n    if (body.length > 999 || (body.match(/\\n/g) || []).length >= 10){\n        return `\n        <div class='journal-entry'>\n            ${Type}\n            ${img}\n            <p class='journal-entry-head'>${Head}</p>\n            <div class='journal-entry-info'>\n                <p class='journal-entry-user'>${user}</p>\n                <p class='journal-entry-time'>${date(stamp)}</p>\n            </div>\n            <p id='pid_${pid}' class='journal-entry-body-long'>${Body}</p>\n            <div\n                id='pid_${pid}_expander'\n                class='journal-entry-expander'\n                onClick='\n                    const expand = ${longJournalExpanderPress};\n                    expand(\"${pid}\");\n                '\n            >\n                <img\n                    id='pid_${pid}_expanderImg'\n                    class='journal-entry-expander-img'\n                    src='${ex2Icon}'\n                >\n            </div>\n        </div>\n        `\n    } else {\n        return `\n        <div class='journal-entry'>\n            ${Type}\n            ${img}\n            <p class='journal-entry-head'>${Head}</p>\n            <div class='journal-entry-info'>\n                <p class='journal-entry-user'>${user}</p>\n                <p class='journal-entry-time'>${date(stamp)}</p>\n            </div>\n            <p class='journal-entry-body'>${Body}</p>\n        </div>\n        `\n    }\n}\n\n\nexport default makeEntry\n","\nconst getServerAdr = () => {\n    if (window.location.href === 'http://localhost:8100/'){\n        return 'http://localhost:8000/'\n    } else {\n        return window.location.href\n    }\n}\n\n\nconst serverAdr = getServerAdr()\n\nexport default serverAdr\n","import makeEntry from './makeEntry'\nimport serverAdr from '../server'\nimport { date } from '../dateTime'\n\n\nexport const postMyEntry = (uid, token, head, body, image, isPublic) => {\n    isPublic = isPublic ? '1' : '0'\n    head = encodeURIComponent(head)\n    body = encodeURIComponent(body)\n    image = encodeURIComponent(image)\n    fetch(\n        `${serverAdr}journal/post/${uid}/${token}/${head}/${body}/${image}/${isPublic}`\n    ).then(\n        res => {\n            res.json().then(\n                data => {\n                    if('error' in data){\n                        console.log(data['error'])\n                    }\n                }\n            )\n        }\n    )\n}\n\n\nexport const submitEntry = (head, body, image, isPrivate) => {\n    const isPublic = isPrivate ? false : true\n    if (head.length > 0 && body.length > 0) {\n        postMyEntry('123', '0', head, body, '0', isPublic)\n        const post = makeEntry(\n            head,\n            'Owen Cameron Easter',\n            head,\n            body,\n            image,\n            isPublic,\n            date()\n        )\n        return post\n    }\n    return null\n}\n\n\nexport const makeMyEntries = (data) => {\n    const feed = document.getElementById('journal-myentries-feed')\n    const count = document.getElementById('journal-myentries-count')\n    feed.innerHTML = ''\n    count.innerText = data.length\n    for(const entry in data){\n        feed.innerHTML = feed.innerHTML + makeEntry(\n            data[entry]['id'],\n            data[entry]['uid'],\n            data[entry]['head'],\n            data[entry]['body'],\n            data[entry]['image'],\n            data[entry]['public'],\n            data[entry]['timestamp']\n        )\n    }\n}\n\n\n// TODO: require token to fetch public & private user entries\nexport const fetchMyEntries = (uid, _token='0') => {\n    fetch(`${serverAdr}journal/fetch/${uid}/entries`)\n    .then(res => {\n        res.json().then(\n            data => {\n                if (uid in data) {\n                    makeMyEntries(data[uid])\n                }\n            }\n        )\n    })\n}\n\n","export default __webpack_public_path__ + \"static/media/camera.a56506e5.svg\";","export default __webpack_public_path__ + \"static/media/edit.995d0b3b.svg\";","export default __webpack_public_path__ + \"static/media/book.6369e535.svg\";","export default __webpack_public_path__ + \"static/media/newspaper.e2f5d21a.svg\";","export default __webpack_public_path__ + \"static/media/expand.41d1e4ce.svg\";","// LIBRARY IMPORTS\nimport './popApps.css'\nimport { shortDate } from '../../../library/dateTime.js'\nimport {\n    fetchMyEntries,\n    submitEntry\n} from '../../../library/journal/api.js'\n\n// ASSET IMPORTS\nimport camera from '../../../assets/icons/camera.svg'\nimport userImg from '../../../assets/icons/user.svg'\nimport newIcon from '../../../assets/icons/edit.svg'\nimport oldIcon from '../../../assets/icons/book.svg'\nimport nwfIcon from '../../../assets/icons/newspaper.svg'\nimport expIcon from '../../../assets/icons/expand.svg'\n\n// GLOBAL DECLERATIONS\nlet entryImg = null;\nlet toolbarTrayOpen = false;\n\nconst toolbarButtons = [\n    'journal-new', 'journal-old', 'journal-nwf'\n]\n\nconst journalViews = [\n    'newentry', 'myentries', 'newsfeed'\n]\n\n// PROMISE DECLERATIONS\nfetchMyEntries('123')\n\n\nconst addImagePreview = () => {\n    const imgEl = document.getElementById('journal-new-entry-img-upload')\n    const cntEl = document.getElementById('journal-new-entry-img-container')\n    imgEl.addEventListener('change', function() {\n        const newImg = imgEl.files[0]\n        if (newImg) {\n            const reader = new FileReader()\n            reader.addEventListener('load', function() {\n                entryImg = this.result\n                cntEl.style.backgroundImage = `url(${this.result})`\n                cntEl.style.border = '2px solid #3498DB'\n            })\n            cntEl.style.opacity = '66%'\n            reader.readAsDataURL(newImg)\n        }\n    })\n}\n\n\nconst toolbarButtonPress = (pressed) => {\n    for (const btn in toolbarButtons) {\n        const el = document.getElementById(\n            'app-toolbar-' + toolbarButtons[btn]\n        )\n\n        if (toolbarButtons[btn] === pressed) {\n            el.className = 'app-toolbar-button atb-selected'\n        } else {\n            el.className = 'app-toolbar-button'\n        }\n\n    }\n    // CLOSE NAVBAR TRAY ON MOBILE AFTER SELECTING AN OPTION\n    document.getElementById('app-toolbar-expander').style.transform =\n        'scaleY(1)'\n    document.getElementById('app-toolbar-container').className =\n        'app-toolbar-container hideOnMobile'\n    toolbarTrayOpen = false\n}\n\n\nconst toolbarExpanderPress = () => {\n    const el = document.getElementById('app-toolbar-expander')\n    const tb = document.getElementById('app-toolbar-container')\n\n    if (toolbarTrayOpen) {\n        el.style.transform = 'scaleY(1)'\n        tb.className = 'app-toolbar-container hideOnMobile'\n        toolbarTrayOpen = false\n    } else {\n        el.style.transform = 'scaleY(-1)'\n        tb.className = 'app-toolbar-container showOnMobile'\n        toolbarTrayOpen = true\n    }\n\n}\n\n\nconst journalViewSelect = (selected) => {\n    for(const i in journalViews){\n        const el = document.getElementById('popApp-journal-' + journalViews[i])\n        if (selected === journalViews[i]) {\n            el.style.display = 'block'\n        } else {\n            el.style.display = 'none'\n        }\n    }\n}\n\n\nconst journalNewPressed = () => {\n    toolbarButtonPress('journal-new')\n    journalViewSelect('newentry')\n}\n\n\nconst journalOldPressed = () => {\n    toolbarButtonPress('journal-old')\n    journalViewSelect('myentries')\n}\n\n\nconst journalNwfPressed = () => {\n    toolbarButtonPress('journal-nwf')\n    journalViewSelect('newsfeed')\n}\n\n\nconst newEntryHeadClick = () => {\n    document.getElementById(\n        'journal-new-entry-head'\n    ).classList.remove('submit-error')\n    document.getElementById(\n        'submit-error-no-head'\n    ).style.display = 'none'\n}\n\n\nconst newEntryBodyClick = () => {\n    document.getElementById(\n        'journal-new-entry-body'\n    ).classList.remove('submit-error')\n    document.getElementById(\n        'submit-error-no-body'\n    ).style.display = 'none'\n}\n\n\nconst newEntrySubmitPressed = () => {\n    const entryHead = document.getElementById('journal-new-entry-head')\n    const entryBody = document.getElementById('journal-new-entry-body')\n    const privacyOp = document.getElementById('journal-new-entry-private')\n    const post = submitEntry(\n        entryHead.value,\n        entryBody.value,\n        entryImg,\n        privacyOp.checked\n    )\n    if(post){\n        // UPDATE 'My Entries' with new entry\n        const feed = document.getElementById('journal-myentries-feed')\n        const count = document.getElementById('journal-myentries-count')\n        count.innerText = parseInt(count.innerText) + 1\n        feed.innerHTML = post + feed.innerHTML\n        // RESET 'New Entry' form to be empty\n        const entryImgUp = document.getElementById(\n            'journal-new-entry-img-container'\n        )\n        entryImg = null\n        entryHead.value = ''\n        entryBody.value = ''\n        entryImgUp.style.backgroundImage = 'none'\n        entryImgUp.style.border = ''\n        privacyOp.checked = false\n        return journalOldPressed()\n    } else {\n        // UPDATE 'New Entry' with invalid inputs error\n        if (entryHead.value.length === 0) {\n            entryHead.classList.add('submit-error')\n            document.getElementById('submit-error-no-head').style.display = 'block'\n        }\n        if (entryBody.value.length === 0) {\n            entryBody.classList.add('submit-error')\n            document.getElementById('submit-error-no-body').style.display = 'block'\n        }\n        return null\n    }\n}\n\n\nconst PopApps = () => {\n    return <div id='document-body' className='document-body'>\n        <img\n            id='app-toolbar-expander'\n            alt='expanding arrow icon'\n            className='app-toolbar-expander'\n            src={expIcon}\n            onClick={toolbarExpanderPress}\n        />\n\n\n        {/* ------------------ JOURNAL APP ------------------ */}\n        <div id='popApp-container-journal' className='popApp-container-selected'>\n            <div\n                id='app-toolbar-container'\n                className='app-toolbar-container hideOnMobile'\n            >\n                <img\n                    id='app-toolbar-journal-nwf'\n                    src={nwfIcon}\n                    alt='news feed button'\n                    className='app-toolbar-button atb-selected'\n                    onClick={journalNwfPressed}\n                />\n                <img\n                    id='app-toolbar-journal-new'\n                    src={newIcon}\n                    alt='new entry button'\n                    className='app-toolbar-button'\n                    onClick={journalNewPressed}\n                />\n                <img\n                    id='app-toolbar-journal-old'\n                    src={oldIcon}\n                    alt='my entries button'\n                    className='app-toolbar-button'\n                    onClick={journalOldPressed}\n                />\n            </div>\n\n\n            <div id='popApp-journal-newsfeed'>\n                <input\n                    id='journal-newsfeed-search'\n                    placeholder='search users & entries'\n                />\n                <div id='journal-newsfeed-container'>\n                    <div id='journal-sidefeed-container'>\n                        <div id='journal-newsfeed-trends'>\n                            <h5 style={{\n                                marginBottom:'10px',\n                                color:'darkgrey'\n                            }}>\n                                popular topic\n                            </h5>\n                            <img\n                                id='journal-trend-img'\n                                src={userImg}\n                                alt='suggested trend'\n                            />\n                            <p id='journal-trend-name'\n                            > Software </p>\n                            <button\n                                id='journal-feed-follow-btn'\n                            > Follow </button>\n                        </div>\n                        <div id='journal-newsfeed-follow'>\n                            <h5 style={{\n                                marginBottom:'10px',\n                                color:'darkgrey'\n                            }}>\n                                popular user\n                            </h5>\n                            <img\n                                id='journal-trend-img'\n                                src={userImg}\n                                alt='suggested trend'\n                            />\n                            <p id='journal-trend-name'\n                            > John Smitherssssss Smith </p>\n                            <button\n                                id='journal-feed-follow-btn'\n                            > Follow </button>\n                        </div>\n                    </div>\n                    <div id='journal-newsfeed'>\n                    </div>\n                </div>\n            </div>\n\n\n            <div id='popApp-journal-newentry'>\n                <div style={{display:'flex'}}>\n                    <div className='journal-entry-head-divider' />\n                    <input\n                        id='journal-new-entry-head'\n                        name='title'\n                        required\n                        maxLength='90'\n                        placeholder='New Entry'\n                        onClick={newEntryHeadClick}\n                    />\n                    <div className='journal-entry-head-divider' />\n                </div>\n                <p\n                    id='submit-error-no-head'\n                    className='submit-error-msg'\n                > ・ You need to title your entry </p>\n                <p\n                    id='submit-error-no-body'\n                    className='submit-error-msg'\n                > ・ You need to write your entry </p>\n                <textarea\n                    id='journal-new-entry-body'\n                    name='content'\n                    required\n                    placeholder='Write your entry here...'\n                    onClick={newEntryBodyClick}\n                />\n                <label id='journal-new-entry-img-container' onClick={addImagePreview}>\n                    <input id='journal-new-entry-img-upload' type='file' hidden />\n                    <img\n                        src={camera}\n                        style={{\n                            width:'fit-content'\n                        }}\n                        alt='upload'\n                    />\n                    <h6\n                        style={{\n                            width:'100%',\n                            textAlign:'center',\n                            color:'lightgrey'\n                        }}\n                    >\n                        upload an image\n                    </h6>\n                </label>\n                <div style={{\n                    width:'40%',\n                    minWidth:'300px',\n                    display:'flex',\n                    margin:'6px auto 6px auto',\n                    justifyContent:'space-between'\n                }}>\n                    <p className='journal-new-entry-detail' style={{textAlign:'left'}}>\n                        Owen Cameron Easter\n                    </p>\n                    <div>\n                        <input\n                            type='checkbox'\n                            id='journal-new-entry-private'\n                            value='private'\n                        />\n                        <label\n                            htmlFor='journal-new-entry-private'\n                            className='journal-new-entry-detail'\n                        > Private Entry </label>\n                    </div>\n                    <p className='journal-new-entry-detail' style={{textAlign:'right'}}>\n                        {shortDate()}\n                    </p>\n                </div>\n                <button\n                    id='journal-new-entry-submit'\n                    onClick={newEntrySubmitPressed}\n                >\n                    Submit\n                </button>\n            </div>\n\n\n            <div id='popApp-journal-myentries'>\n                <div id='journal-myentries'>\n                    <div className='journal-myentries-spacer'> &nbsp; </div>\n                    <div id='journal-myentries-details'>\n                        <img\n                            alt='user'\n                            src={userImg}\n                            className='journal-user-image'\n                        />\n                        <p style={{fontSize:'20px', textAlign:'center'}}>\n                            Owen Cameron Easter\n                        </p>\n                        <div id='journal-myentries-userinfo'>\n                            <p> <b>22</b> years old </p>\n                            <p> Software Engineer </p>\n                            <p> Easter Company </p>\n                            <hr />\n                            <p> Entries:&nbsp;\n                                <b id='journal-myentries-count'>\n                                    0\n                                </b>\n                            </p>\n                            <p> Last Updated: 01/01/2021 </p>\n                            <hr />\n                            <div id='journal-myentries-followContainer'>\n                                <div id='journal-myentries-followTags'>\n                                    <p> Followers </p>\n                                    <p> Following </p>\n                                </div>\n                                <div id='journal-myentries-followInfo'>\n                                    <p> 25 </p>\n                                    <p> 5000 </p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div id='journal-myentries-feed'>\n                    </div>\n                </div>\n            </div>\n\n\n        </div>\n\n\n        {/* ------------------ FINANCE APP ------------------ */}\n        <div id='popApp-container-finance' className='popApp-container'>\n            <h1> Finance </h1>\n        </div>\n\n\n        {/* ------------------ DISCOVER APP ------------------ */}\n        <div id='popApp-container-discover' className='popApp-container'>\n            <h1> Discover </h1>\n        </div>\n\n    </div>\n}\n\n\nexport default PopApps\n","import './main.css'\nimport Navbar from './../components/navbar/navbar'\nimport PopApps from './../components/popApps/popApps'\n\n\nconst Main = () => {\n  return <div>\n    <Navbar/>\n    <div className='main-app-divider' />\n    <div className='main-app-container'>\n      <PopApps/>\n    </div>\n  </div>\n}\n\n\nexport default Main;\n","import './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Main from './apps/main/main';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// reportWebVitals(console.log);\n"],"sourceRoot":""}